"""
Django settings for buildservice project.

Generated by 'django-admin startproject' using Django 1.10.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

from secrets import *
from local_settings import *
from multisite import SiteID

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

ALLOWED_HOSTS = [
	"127.0.0.1",
	"localhost",
	"ocb.lanceville.cn",
	"ec2-13-58-165-77.us-east-2.compute.amazonaws.com",
]

MULTISITE_EXTRA_HOSTS = ALLOWED_HOSTS

ACCOUNT_ACTIVATION_DAYS = 1

# Application definition

#SITE_ID = 2
SITE_ID = SiteID(default=2)

INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'django.contrib.sites',
	'multisite',
	'treebeard',
	'cms',
	'django_tables2',
	'crispy_forms',
	'registration.backends.hmac',
	'menu',
	'menus',
	'bootstrap3',
	'captcha',
	'allauth',
	'allauth.account',
	'allauth.socialaccount',
#	'allauth.socialaccount.providers.facebook',
#	'allauth.socialaccount.providers.google',
	'allauth.socialaccount.providers.github',
	'allauth.socialaccount.providers.openid',
#	'allauth.socialaccount.providers.twitch',
#	'allauth.socialaccount.providers.twitter',
	'allauth.socialaccount.providers.weibo',
#	'allauth.socialaccount.providers.xing',
	'betterforms',
	'buildservice',
	'qflow',
	'yosys',
	'graywolf',
	'qrouter',
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
	'cms.middleware.user.CurrentUserMiddleware',
	'multisite.middleware.CookieDomainMiddleware',
]

CACHE_MULTISITE_ALIAS = 'multisite'
CACHE_MULTISITE_KEY_PREFIX = ''
#MULTISITE_FALLBACK = 'django.views.generic.base.RedirectView'
#MULTISITE_FALLBACK_KWARGS = {'url': 'http://example.com/', 'permanent': False}

ROOT_URLCONF = 'buildservice.urls'

AUTHENTICATION_BACKENDS = (
	"allauth.account.auth_backends.AuthenticationBackend",
)

LOGIN_URL = '/login/'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [BASE_DIR+'/templates'],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

CACHES = {
	'default': {
		'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
		'TIMEOUT': 60 * 60 * 24,  # 24 hours
	},
	'multisite': {
		'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
		#'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
		'TIMEOUT': 60 * 60 * 24,  # 24 hours
	},
}

WSGI_APPLICATION = 'buildservice.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.postgresql',
		'NAME': POSTGRES_DATABASE,
		'USER': POSTGRES_USER,
		'PASSWORD': POSTGRES_SECRET,
		'HOST': '127.0.0.1',
		'PORT': '5432',
	}
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
]

ACCOUNT_EMAIL_VERIFICATION = "mandatory"
EMAIL_REQUIRED = True

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en'

LANGUAGES = (
    ('en', _('English')),
)

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

ACCOUNT_SIGNUP_FORM_CLASS = 'buildservice.forms.RegistrationFormCaptcha'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR+STATIC_URL

STATICFILES_DIRS = (
	BASE_DIR+'/persistent_static/',
)

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Host for sending e-mail.
EMAIL_HOST = 'localhost'

# Port for sending e-mail.
EMAIL_PORT = 25

# Optional SMTP authentication information for EMAIL_HOST.
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = False
